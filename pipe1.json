{"_pipes": [{"_pipes": {"_pipes": "None", "T": {"_value_": "FETCH", "_name_": "FETCH", "__objclass__": ["_generate_next_value_", "__module__", "__doc__", "_new_member_", "_use_args_", "_member_names_", "_member_map_", "_value2member_map_", "_unhashable_values_", "_member_type_", "_value_repr_", "FETCH", "PROCESS", "CACHE", "COLLATE", "__new__"], "_sort_order_": "0"}, "_cache": "None", "name": "LoadInt", "_pipe_id": "42", "_has_run": "True", "_cb": {"name": "LoadInt", "type": "Function", "code": "@Fetch\ndef LoadInt(frm: datetime, to: datetime, *args, **kwargs) -> list[int]:\n    return [1, 2, 3, 4, 5]\n"}, "_called": "True"}, "T": {"_value_": "PROCESS", "_name_": "PROCESS", "__objclass__": ["_generate_next_value_", "__module__", "__doc__", "_new_member_", "_use_args_", "_member_names_", "_member_map_", "_value2member_map_", "_unhashable_values_", "_member_type_", "_value_repr_", "FETCH", "PROCESS", "CACHE", "COLLATE", "__new__"], "_sort_order_": "1"}, "_cache": "None", "name": "AddOne", "_pipe_id": "43", "_has_run": "True", "_cb": {"name": "AddOne", "type": "Function", "code": "@Process\ndef AddOne(frm: datetime, to: datetime, *args, po: PipeOutput[list[int]], **kwargs) -> list[int]:\n    return [x + 1 for x in po.value]\n"}, "_called": "True"}, {"_pipes": {"_pipes": "None", "T": {"_value_": "FETCH", "_name_": "FETCH", "__objclass__": ["_generate_next_value_", "__module__", "__doc__", "_new_member_", "_use_args_", "_member_names_", "_member_map_", "_value2member_map_", "_unhashable_values_", "_member_type_", "_value_repr_", "FETCH", "PROCESS", "CACHE", "COLLATE", "__new__"], "_sort_order_": "0"}, "_cache": "None", "name": "LoadInt", "_pipe_id": "44", "_has_run": "True", "_cb": {"name": "LoadInt", "type": "Function", "code": "@Fetch\ndef LoadInt(frm: datetime, to: datetime, *args, **kwargs) -> list[int]:\n    return [1, 2, 3, 4, 5]\n"}, "_called": "True"}, "T": {"_value_": "PROCESS", "_name_": "PROCESS", "__objclass__": ["_generate_next_value_", "__module__", "__doc__", "_new_member_", "_use_args_", "_member_names_", "_member_map_", "_value2member_map_", "_unhashable_values_", "_member_type_", "_value_repr_", "FETCH", "PROCESS", "CACHE", "COLLATE", "__new__"], "_sort_order_": "1"}, "_cache": "None", "name": "Double", "_pipe_id": "45", "_has_run": "True", "_cb": {"name": "Double", "type": "Function", "code": "@Process\ndef Double(frm: datetime, to: datetime, *args, po: PipeOutput[list[int]], **kwargs) -> list[int]:\n    return [x * 2 for x in po.value]\n"}, "_called": "True"}], "T": {"_value_": "COLLATE", "_name_": "COLLATE", "__objclass__": ["_generate_next_value_", "__module__", "__doc__", "_new_member_", "_use_args_", "_member_names_", "_member_map_", "_value2member_map_", "_unhashable_values_", "_member_type_", "_value_repr_", "FETCH", "PROCESS", "CACHE", "COLLATE", "__new__"], "_sort_order_": "3"}, "_cache": "None", "name": "Sum", "_pipe_id": "46", "_has_run": "True", "_cb": {"name": "Sum", "type": "Function", "code": "@Collate\ndef Sum(frm: datetime, to: datetime, *args, po1: PipeOutput[list[int]], po2: PipeOutput[list[int]], **kwargs) -> list[int]:\n    return [v1 + v2 for v1, v2 in zip(po1.value, po2.value)]\n"}}